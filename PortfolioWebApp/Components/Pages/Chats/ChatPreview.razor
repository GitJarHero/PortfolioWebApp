@using PortfolioWebApp.Shared

<MudListItem T="ChatPreviewDto" Class="py-4 px-4" OnClick="@(() => OnChatSelected.InvokeAsync(ChatPreviewData))">
    <div class="d-flex align-items-center w-100" style="gap: 12px;">
        <!-- Avatar -->
        <MudAvatar Style=@($"width: 48px;height: 48px;font-size: 1.25rem; background-color: {ChatPreviewData.ChatPartner.profile_color}")>
            @ChatPreviewData.ChatPartner.username.ToCharArray()[0].ToString().ToUpper()
        </MudAvatar>

        <!-- Chat Info -->
        <div class="flex-grow-1 d-flex flex-column justify-center" style="min-height: 48px; min-width: 0;">
            <div class="d-flex justify-content-between align-items-center" style="min-width: 0;">
                <MudText Typo="Typo.subtitle1"
                         Class="fw-bold text-truncate"
                         Style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 100%;">
                    @ChatPreviewData.ChatPartner.username
                </MudText>
                <MudText Typo="Typo.caption" Class="text-muted ms-2">
                    @ChatPreviewData.LatestMessage?.Created
                </MudText>
            </div>
            <div class="d-flex justify-content-between align-items-center" style="min-width: 0;">
                <MudText Typo="Typo.body2" Class="text-truncate text-muted" style="max-width: 100%;">
                    @ChatPreviewData.LatestMessage?.Content
                </MudText>
            
                @if (ChatPreviewData.NewMessagesCount > 0) {
                    <div class="ms-2 d-flex justify-content-center align-items-center"
                         style="min-width: 24px; height: 24px; padding-inline: 6px; background-color: var(--mud-palette-primary); color: white; border-radius: 12px; font-size: 0.75rem;">
                        @if (ChatPreviewData.NewMessagesCount > 99) {
                            @("99+")
                        }
                        else {
                            @ChatPreviewData.NewMessagesCount
                        }
                    </div>
                }
                
            </div>
        </div>
    </div>
</MudListItem>

@code {
    [Parameter]
    public ChatPreviewDto ChatPreviewData { get; set; }

    [Parameter]
    public EventCallback<ChatPreviewDto> OnChatSelected { get; set; }
}